{
  "hash": "6a94af9d7b3a0a90666003a7b6234693",
  "result": {
    "engine": "jupyter",
    "markdown": "<!-- ---\ntitle: Evaluating BART's West Oakland Fare Gate\nbibliography: ../../blog.bib\nauthor: Peter Amerkhanian\ndate: 2024-6-16\ndraft: true\ncategories:\n  - Python\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    code-fold: false\n    code-tools: true\njupyter: python3\n\n---\n\n::: {#1d355a98 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport dask.dataframe as dd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport matplotlib\nimport matplotlib.ticker as ticker\nplt.style.use('default')\nfrom datetime import datetime\nfrom typing import Tuple, Union\nfrom collections.abc import Iterable\n```\n:::\n\n\n::: {#916afcfd .cell execution_count=2}\n``` {.python .cell-code}\ndf = dd.read_parquet(\"../dask-data-io/data/parquet_data\")\ndf.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Hour</th>\n      <th>Start</th>\n      <th>End</th>\n      <th>Riders</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2011-01-01</td>\n      <td>0</td>\n      <td>12TH</td>\n      <td>16TH</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2011-01-01</td>\n      <td>0</td>\n      <td>12TH</td>\n      <td>24TH</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2011-01-01</td>\n      <td>0</td>\n      <td>12TH</td>\n      <td>ASHB</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2011-01-01</td>\n      <td>0</td>\n      <td>12TH</td>\n      <td>BAYF</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2011-01-01</td>\n      <td>0</td>\n      <td>12TH</td>\n      <td>CIVC</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#eb1baf64 .cell execution_count=3}\n``` {.python .cell-code}\n# Change to SQL?\ndf_rpd = df.groupby(['Date', 'Start', 'End'])['Riders'].sum().compute()\n```\n:::\n\n\n::: {#ca80e6b5 .cell execution_count=4}\n``` {.python .cell-code}\ndf_rpd.reset_index()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Start</th>\n      <th>End</th>\n      <th>Riders</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2020-01-01</td>\n      <td>12TH</td>\n      <td>19TH</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2020-01-01</td>\n      <td>12TH</td>\n      <td>BALB</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2020-01-01</td>\n      <td>12TH</td>\n      <td>COLS</td>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2020-01-01</td>\n      <td>12TH</td>\n      <td>DELN</td>\n      <td>50</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2020-01-01</td>\n      <td>12TH</td>\n      <td>DUBL</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>10453707</th>\n      <td>2014-12-31</td>\n      <td>WOAK</td>\n      <td>RICH</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>10453708</th>\n      <td>2014-12-31</td>\n      <td>WOAK</td>\n      <td>SANL</td>\n      <td>37</td>\n    </tr>\n    <tr>\n      <th>10453709</th>\n      <td>2014-12-31</td>\n      <td>WOAK</td>\n      <td>SBRN</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>10453710</th>\n      <td>2014-12-31</td>\n      <td>WOAK</td>\n      <td>UCTY</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>10453711</th>\n      <td>2014-12-31</td>\n      <td>WOAK</td>\n      <td>WDUB</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n<p>10453712 rows Ã— 4 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#0bdf04e4 .cell execution_count=5}\n``` {.python .cell-code}\ndf_rpd = df_rpd.reset_index()\n```\n:::\n\n\n::: {#dec8a3bf .cell execution_count=6}\n``` {.python .cell-code}\nwoak_fare_gate_completed = datetime(2023, 12, 28)\n```\n:::\n\n\n::: {#d34c897a .cell execution_count=7}\n``` {.python .cell-code}\nwoak_fare_gate_completed\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\ndatetime.datetime(2023, 12, 28, 0, 0)\n```\n:::\n:::\n\n\n::: {#bd5c286a .cell execution_count=8}\n``` {.python .cell-code}\ndf_rpd['Date'] = pd.to_datetime(df_rpd['Date'])\n```\n:::\n\n\n::: {#f05e2805 .cell execution_count=9}\n``` {.python .cell-code}\ndf_rpd['WOAK_gate'] = df_rpd['Date'] >= woak_fare_gate_completed\n```\n:::\n\n\n::: {#0d4a189c .cell execution_count=10}\n``` {.python .cell-code}\ndf_rpd['Start'].unique()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n<ArrowStringArray>\n['12TH', '16TH', '19TH', '24TH', 'ANTC', 'ASHB', 'BALB', 'BAYF', 'CAST',\n 'CIVC', 'COLM', 'COLS', 'CONC', 'DALY', 'DBRK', 'DELN', 'DUBL', 'EMBR',\n 'FRMT', 'FTVL', 'GLEN', 'HAYW', 'LAFY', 'LAKE', 'MCAR', 'MLBR', 'MONT',\n 'NBRK', 'NCON', 'OAKL', 'ORIN', 'PCTR', 'PHIL', 'PITT', 'PLZA', 'POWL',\n 'RICH', 'ROCK', 'SANL', 'SBRN', 'SFIA', 'SHAY', 'SSAN', 'UCTY', 'WARM',\n 'WCRK', 'WDUB', 'WOAK', 'BERY', 'MLPT']\nLength: 50, dtype: string\n```\n:::\n:::\n\n\n::: {#cb67765e .cell execution_count=11}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import StandardScaler\n```\n:::\n\n\n::: {#69add64b .cell execution_count=12}\n``` {.python .cell-code}\ndef isolate_station(name, df_rpd=df_rpd):\n    df_woak = df_rpd[df_rpd['Start'] == name]\n    df_woak_all = df_woak.groupby(['Date', 'Start'])['Riders'].sum().reset_index()\n    df_woak_all['WOAK_gate'] = df_woak_all['Date'] >= woak_fare_gate_completed\n    df_woak_all = df_woak_all.set_index('Date').drop(columns=['Start'])\n    scaler = StandardScaler()\n    scaler.fit(df_woak_all[['Riders']])\n    df_woak_all['Riders_std'] = scaler.transform(df_woak_all[['Riders']])[:, 0]\n    return df_woak_all\n\ndef agg_station_pct(df, sample, date_start = \"2023-08-01\", date_end = \"2024-05-01\"):\n    df_agg = df.resample(sample)['Riders'].sum().pct_change()\n    df_agg = df_agg.loc[date_start:date_end]\n    return df_agg\n\ndef agg_station_std(df, sample, date_start = \"2023-08-01\", date_end = \"2024-05-01\"):\n    df_agg = df.resample(sample)['Riders'].sum()\n    df_agg = df_agg.loc[date_start:date_end]\n    return df_agg\n```\n:::\n\n\n::: {#63b8ce8e .cell execution_count=13}\n``` {.python .cell-code}\nfig, ax = plt.subplots(figsize=(8, 4))\nlabel_other = True\nfor station in ['FTVL', '12TH', '19TH', 'LAKE']:\n    if label_other:\n        agg_station_std(isolate_station(station), 'W').plot(ax=ax, color=\"grey\", alpha=.5, label=\"Other Oakland Stations\")\n    else:\n        agg_station_std(isolate_station(station), 'W').plot(ax=ax, color=\"grey\", alpha=.5, label=\"_Hidden\")\n    label_other = False\nagg_station_std(isolate_station('WOAK'), 'W').plot(ax=ax, label=\"WOAK\")\nax.axvline(woak_fare_gate_completed, color=\"black\", linestyle=\"--\", label=\"WOAK Fare Gates Installed\")\nax.grid(alpha=.4)\nax.legend();\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-14-output-1.png){}\n:::\n:::\n\n\n -->\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}